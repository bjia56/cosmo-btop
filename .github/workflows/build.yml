name: Build btop

on:
  workflow_dispatch:
    inputs:
      debug_build:
        required: false
        type: boolean
      debug_link:
        required: false
        type: boolean
  push:
    branches: ["main"]
  pull_request:
  workflow_call:

jobs:
  build:
    name: Build btop ${{ matrix.arch }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [x86_64, aarch64]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Load cosmocc version
        run: |
          version=$(cat .github/cosmocc_version.txt)
          echo "cosmocc_version=${version}" >> "$GITHUB_ENV"

      - name: Setup cosmocc
        uses: bjia56/setup-cosmocc@v0.0.3
        with:
          version: ${{ env.cosmocc_version }}

      - name: Fixup Cosmopolitan toolchain
        run: |
          cd $(dirname $(which cosmocc))

          chmod +x cosmoranlib
          ln -s cosmoranlib ${{ matrix.arch }}-unknown-cosmo-ranlib

          ln -s ${{ matrix.arch }}-unknown-cosmo-cc ${{ matrix.arch }}-unknown-cosmo-gcc
          ln -s ${{ matrix.arch }}-unknown-cosmo-c++ ${{ matrix.arch }}-unknown-cosmo-g++

          # enable rtti, exceptions
          which ${{ matrix.arch }}-unknown-cosmo-c++ | xargs sed -i 's/fno\-rtti//g'
          which ${{ matrix.arch }}-unknown-cosmo-c++ | xargs sed -i 's/fno\-exceptions//g'

      - name: Build btop
        run: |
          export CC=${{ matrix.arch }}-unknown-cosmo-gcc
          export CXX=${{ matrix.arch }}-unknown-cosmo-g++
          cmake -B build
          cmake --build build --parallel 4
          mv build/btop build/btop-${{ matrix.arch }}

      - name: Upload btop
        uses: actions/upload-artifact@v4
        with:
          name: btop-${{ matrix.arch }}
          path: ./build/btop-${{ matrix.arch }}

      - name: Interactive debugging
        uses: fawazahmed0/action-debug-vscode@v3
        if: ${{ always() && inputs.debug_build }}

  apelink:
    name: Apelink btop
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Load cosmocc version
        run: |
          version=$(cat .github/cosmocc_version.txt)
          echo "cosmocc_version=${version}" >> "$GITHUB_ENV"

      - name: Setup cosmocc
        uses: bjia56/setup-cosmocc@v0.0.3
        with:
          version: ${{ env.cosmocc_version }}

      - name: Download btop
        uses: actions/download-artifact@v4
        with:
          pattern: btop-*
          path: /tmp/btop/
          merge-multiple: true

      - name: Apelink
        run: |
          cosmo_bin=$(dirname $(which cosmocc))
          $(which apelink) \
            -l ${cosmo_bin}/ape-x86_64.elf \
            -l ${cosmo_bin}/ape-aarch64.elf \
            -M ${cosmo_bin}/ape-m1.c \
            -o btop.com \
            /tmp/btop/btop-x86_64 \
            /tmp/btop/btop-aarch64

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: btop.com
          path: ./btop.com

      - name: Interactive debugging
        uses: fawazahmed0/action-debug-vscode@v3
        if: ${{ always() && inputs.debug_link }}
